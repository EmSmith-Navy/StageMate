// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  firstName   String
  lastName    String
  email       String     @unique
  password    String     // Hashed password
  venueName   String
  prospects   Prospect[] // Relationship with musicians through Prospect model
}

model Musician {
  id                    String     @id @default(uuid())
  actName              String
  homebase             String
  active               Boolean
  genre                String
  averageTicketPrice   Decimal    @db.Decimal(10, 2)
  averageVenueCapacity Int
  lastThreeVenues      Json       // Stored as JSON array
  agent                String
  agentEmail           String
  agentPhone           String
  agency               String
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  prospects            Prospect[] // Relationship with venues through Prospect model
}

model Prospect {
  id         String    @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  musician   Musician  @relation(fields: [musicianId], references: [id])
  musicianId String
  status     String    // e.g., "Interested", "Contacted", "Negotiating", "Booked", "Rejected"
  notes      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, musicianId]) // Ensures a venue can't add the same musician twice
}
